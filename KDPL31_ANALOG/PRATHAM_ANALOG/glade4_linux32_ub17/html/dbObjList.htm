<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- #BeginTemplate "/Templates/glade.dwt" --><!-- DW6 -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Glade Reference Manual</title>
<link href="CSS Docs/shadowHeading1.css" rel="stylesheet" type="text/css">
<!-- #EndEditable -->
<meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
<style type="text/css">
body,td,th {
	font-family: Arial, Helvetica, sans-serif;
}
</style>
</head>
<body bgcolor="#FFFFFF">
<div align="left"><img src="images/canvasview" width="32" height="32" align="right"><br>
</div>
<div align="left">
  <p align="left"><font face="Arial, Helvetica, sans-serif"><b><font size="4">Glade 
    Reference</font></b></font></p>
  <hr>
  <!-- #BeginEditable "text" -->
<h2><font face="Arial, Helvetica, sans-serif">dbObjList</font></h2>

<p><font face="Arial, Helvetica, sans-serif">A dbObjList is a list class containing dbObj objects. It is returned e.g by cellView::dbGetOverlaps()</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">list.clear()</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Clears a dbObjList</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">int list.size()</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Returns the number of objects in a dbObjList</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif" pbzloc="1413">bool list.isEmpty()</font></h4>

<p pbzloc="1412"><font face="Arial, Helvetica, sans-serif">Returns&nbsp;True if the dbObjList is empty, i.e. the size is zero.</font></p>

<p pbzloc="1418">&nbsp;</p>

<p class="shadowHeading1"><font face="Arial"><strong pbzloc="1416">bool list.member(dbObj *obj)</strong></font></p>

<p pbzloc="1417"><font face="Arial">Returns&nbsp;True if the object obj is a member of the list, else False.</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">list.prepend(dbObj *obj)</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Inserts the object at the beginning of the list. No list traversal is required.</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif">list.append(dbObj *obj)</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Inserts the object at the end of the list. No list traversal is required.</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1"><font face="Arial, Helvetica, sans-serif" pbzloc="1435">list.concat(dbObjList *otherlist)</font></h4>

<p pbzloc="1423"><font face="Arial, Helvetica, sans-serif" pbzloc="1422">Concatenate the two lists. <em>otherlist </em>is appended to the list, note this is a soft copy and <em>otherlist </em>remains unchanged.</font></p>

<p pbzloc="1421">&nbsp;</p>

<h4 class="shadowHeading1" pbzloc="1431"><font face="Arial, Helvetica, sans-serif" pbzloc="1429">int list.remove(<a href="dbObj.htm">dbObj </a>*obj)</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Removes the object from the list. The list size is decremented. Returns 1 if the dbObj was found in the list, 0 if not.</font></p>

<p>&nbsp;</p>

<p class="shadowHeading1" pbzloc="1433"><font face="Arial"><strong pbzloc="1432"><a href="dbObj.htm" pbzloc="1434">dbObj </a>*list.pop()</strong></font></p>

<p><font face="Arial">Pops an object from the front of the list; the size of the list is decremented by one.</font></p>

<p pbzloc="1473">&nbsp;</p>

<h4 class="shadowHeading1" pbzloc="1439"><font face="Arial, Helvetica, sans-serif" pbzloc="1436"><a href="dbObj.htm" pbzloc="1438">dbObj </a>* list.first()</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Returns the first object in the list.</font></p>

<p pbzloc="1474">&nbsp;</p>

<h4 class="shadowHeading1" pbzloc="1443"><font face="Arial, Helvetica, sans-serif" pbzloc="1440"><a href="dbObj.htm" pbzloc="1442">dbObj </a>*list.next()</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Returns the next object in the list, or null if the end of the list is reached. The iterator is incremented.</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1" pbzloc="1447"><font face="Arial, Helvetica, sans-serif" pbzloc="1453"><a href="dbObj.htm" pbzloc="1446">dbObj </a>*list.peek()</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Returns the next object in the list, or null if the end of the list is reached. The iterator is NOT incremented.</font></p>

<p>&nbsp;</p>

<h4 class="shadowHeading1" pbzloc="1452"><font face="Arial, Helvetica, sans-serif" pbzloc="1469"><a href="dbObj.htm" pbzloc="1451">dbObj </a>*list.last()</font></h4>

<p><font face="Arial, Helvetica, sans-serif">Returns the last object in the list, or null if the list is empty.</font></p>

<p>&nbsp;</p>

<p><font face="Arial"><strong pbzloc="1471">Casting to other types</strong></font></p>

<p><font face="Arial" pbzloc="1457">Because many operations e.g. dbGetOverlaps() as mentioned above return a dbObjList with object as the base class, dbObj, there are swig wrapped C functions to cast to the derived type (you cannot cast in python).</font></p>

<p pbzloc="1468"><font face="Arial" pbzloc="1470">See the&nbsp;<a href="dbObj.htm">dbObj </a>class for a list of all cast functions.</font></p>

<p>&nbsp;</p>
<p align="left"><font face="Arial" size="5"><strong><u>Iterator</u></strong></font></p>
<p align="left"><font face="Arial"> An iterator to allow traversing the objects in the dbObjList using Python.</font></p>
<p align="left">&nbsp;</p>
<p align="left"><font face="Arial"><strong>iter = objIterator(dbObjList *list)</strong></font></p>
<p align="left"><font face="Arial">Initialises the <a href="dbObj.htm">dbObj</a> iterator for the dbObjList. For example:</font></p>

<pre> 
	# Find shapes on a layer in a given area and print their type
	#
	objs = cv.dbGetOverlaps(box, layer)
	iter = dbObjIterator(objs)
	while not iter.end() :
		obj = iter.value()
		type = obj.objType()
		print &quot;object type = &quot;, type
		iter.next()
	#
</pre>
  
<p align="left">&nbsp;</p>

<p align="left" class="shadowHeading1"><font face="Arial"><a href="dbObj.htm"><strong>dbObj</strong></a><strong> </strong><strong>*obj = iter.value()</strong></font></p>
<p align="left"><font face="Arial">Returns the current object.</font></p>
<p align="left">&nbsp;</p>
<p align="left" class="shadowHeading1"><font face="Arial"><strong>iter.next()</strong></font></p>
<p align="left"><font face="Arial">Advances the iterator to the next dbObj.</font></p>
&nbsp;
</p>
<p align="left" class="shadowHeading1"><font face="Arial"><strong>bool iter.end()</strong></font></p>
<p align="left"><font face="Arial">Returns false if there are more objects, else returns true if there are no more.</font></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- #EndEditable --> 
  <p><a href="contents.htm"><font face="Arial, Helvetica, sans-serif">Contents</font></a><font face="Arial, Helvetica, sans-serif">|<a href="subject_index.htm">Index</a></font></p>
  <p><font face="Arial, Helvetica, sans-serif" size="-2">Copyright &copy; Peardrop 
    Design 2018.</font></p>
</div>
</body>
<!-- #EndTemplate --></html>
